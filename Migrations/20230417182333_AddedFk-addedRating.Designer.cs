// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using filmsystemet.Data;

#nullable disable

namespace filmsystemet.Migrations
{
    [DbContext(typeof(MovieSystemDbContext))]
    [Migration("20230417182333_AddedFk-addedRating")]
    partial class AddedFkaddedRating
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("filmsystemet.Models.FavouriteGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Movies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("FavouriteGenres");
                });

            modelBuilder.Entity("filmsystemet.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("FavouriteGenreId")
                        .HasColumnType("int");

                    b.Property<string>("GenreName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FavouriteGenreId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("filmsystemet.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("FavouriteGenreId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LastName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("FavouriteGenreId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("filmsystemet.Models.Genre", b =>
                {
                    b.HasOne("filmsystemet.Models.FavouriteGenre", null)
                        .WithMany("GenreId")
                        .HasForeignKey("FavouriteGenreId");
                });

            modelBuilder.Entity("filmsystemet.Models.Person", b =>
                {
                    b.HasOne("filmsystemet.Models.FavouriteGenre", null)
                        .WithMany("PersonId")
                        .HasForeignKey("FavouriteGenreId");
                });

            modelBuilder.Entity("filmsystemet.Models.FavouriteGenre", b =>
                {
                    b.Navigation("GenreId");

                    b.Navigation("PersonId");
                });
#pragma warning restore 612, 618
        }
    }
}
